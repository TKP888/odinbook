<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= title %> - OdinBook</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet"
    />
    <link href="/css/main.css" rel="stylesheet" />
  </head>
  <body>
    <!-- Header -->
    <header class="main-header">
      <div class="header-container">
        <div class="header-left">
          <a href="/dashboard" class="logo"> OdinBook </a>

          <nav>
            <ul class="nav-menu">
              <li class="nav-item">
                <a
                  href="/dashboard"
                  class="nav-link <%= typeof activePage !== 'undefined' && activePage === 'dashboard' ? 'active' : '' %>"
                >
                  <!-- <i class="fas fa-home"></i> -->
                  <span class="d-none d-md-inline">Home</span>
                </a>
              </li>
              <!-- <li class="nav-item">
                <a
                  href="/profile"
                  class="nav-link <%= typeof activePage !== 'undefined' && activePage === 'profile' ? 'active' : '' %>"
                >
                  <i class="fas fa-user"></i>
                  <span class="d-none d-md-inline">Profile</span>
                </a>
              </li> -->
              <li class="nav-item">
                <a
                  href="/friends/users"
                  class="nav-link <%= typeof activePage !== 'undefined' && activePage === 'users' ? 'active' : '' %>"
                >
                  <span class="d-none d-md-inline">Users</span>
                </a>
              </li>
            </ul>
          </nav>
        </div>

        <!-- Search Bar -->
        <div class="header-search">
          <div class="search-container">
            <div class="input-group input-group-rounded">
              <input
                type="text"
                class="form-control search-input rounded-pill-start"
                id="headerSearchInput"
                placeholder="Search users..."
                autocomplete="off"
                style="
                  border-top-right-radius: 0;
                  border-bottom-right-radius: 0;
                "
              />
              <button
                class="btn btn-outline-secondary search-btn rounded-pill-end"
                type="button"
                onclick="headerSearchUsers()"
                style="border-top-left-radius: 0; border-bottom-left-radius: 0"
              ></button>
            </div>
            <!-- Search Results Dropdown -->
            <div
              id="headerSearchResults"
              class="search-results-dropdown"
              style="display: none"
            >
              <div id="headerUsersList"></div>
              <div
                id="headerNoResults"
                style="display: none"
                class="text-center text-muted p-3"
              >
                <i class="fas fa-search fa-lg mb-2"></i>
                <p class="mb-0">No users found</p>
              </div>
              <div
                id="headerSearchLoading"
                style="display: none"
                class="text-center p-3"
              >
                <div
                  class="spinner-border spinner-border-sm text-primary"
                  role="status"
                >
                  <span class="visually-hidden">Loading...</span>
                </div>
                <span class="ms-2">Searching...</span>
              </div>
            </div>
          </div>
        </div>

        <div class="header-right">
          <div class="user-menu dropdown">
            <div class="user-avatar dropdown-toggle" data-bs-toggle="dropdown">
              <%= user && user.firstName ? user.firstName.charAt(0) : '' %><%=
              user && user.lastName ? user.lastName.charAt(0) : '' %>
            </div>
            <ul class="dropdown-menu dropdown-menu-end">
              <li>
                <a class="dropdown-item" href="/friends/users?tab=requests">
                  <i class="fas fa-user-plus"></i>
                  Friend Requests
                  <span
                    id="headerRequestCount"
                    class="badge bg-danger ms-1"
                    style="display: none"
                    >0</span
                  >
                </a>
              </li>
              <li>
                <a class="dropdown-item" href="/friends/users?tab=friends">
                  <i class="fas fa-user-friends"></i>
                  My Friends
                </a>
              </li>
              <li><hr class="dropdown-divider" /></li>
              <li>
                <a class="dropdown-item" href="/auth/logout">
                  <i class="fas fa-sign-out-alt"></i>
                  Logout
                </a>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <main class="main-content">
      <!-- Flash Messages -->
      <% if(success_msg != '') { %>
      <div class="alert alert-success alert-dismissible fade show" role="alert">
        <%= success_msg %>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="alert"
        ></button>
      </div>
      <% } %> <% if(error_msg != '') { %>
      <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <%= error_msg %>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="alert"
        ></button>
      </div>
      <% } %> <% if(error != '') { %>
      <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <%= error %>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="alert"
        ></button>
      </div>
      <% } %> <%- body %>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Header Search Script -->
    <script>
      let headerSearchTimeout;

      function headerSearchUsers() {
        const searchTerm = document
          .getElementById("headerSearchInput")
          .value.trim();

        console.log("Header search triggered for:", searchTerm);

        if (searchTerm.length === 0) {
          hideHeaderSearchResults();
          return;
        }

        showHeaderSearchLoading();

        const searchUrl = `/friends/search?q=${encodeURIComponent(searchTerm)}`;
        console.log("Making request to:", searchUrl);

        fetch(searchUrl)
          .then((response) => {
            console.log("Search response status:", response.status);
            return response.json();
          })
          .then((data) => {
            console.log("Search results:", data);
            hideHeaderSearchLoading();
            displayHeaderSearchResults(data.users);
          })
          .catch((error) => {
            console.error("Header search error:", error);
            hideHeaderSearchLoading();
            hideHeaderSearchResults();
          });
      }

      function displayHeaderSearchResults(users) {
        const resultsDiv = document.getElementById("headerSearchResults");
        const usersListDiv = document.getElementById("headerUsersList");
        const noResultsDiv = document.getElementById("headerNoResults");

        if (users.length === 0) {
          resultsDiv.style.display = "block";
          usersListDiv.innerHTML = "";
          noResultsDiv.style.display = "block";
          return;
        }

        noResultsDiv.style.display = "none";
        resultsDiv.style.display = "block";

        usersListDiv.innerHTML = users
          .map(
            (user) => `
        <div class="search-result-item">
          <div class="d-flex align-items-center p-2">
            <div class="user-avatar-small me-3">
              ${(user.firstName || "").charAt(0)}${(user.lastName || "").charAt(
              0
            )}
            </div>
            <div class="flex-grow-1">
              <div class="fw-bold">${user.firstName || ""} ${
              user.lastName || ""
            }</div>
              <div class="text-muted small">@${user.username}</div>
            </div>
            <button class="btn btn-primary btn-sm" onclick="sendFriendRequestFromHeader('${
              user.id
            }', '${user.firstName || ""} ${user.lastName || ""}')">
              <i class="fas fa-user-plus"></i>
            </button>
          </div>
        </div>
      `
          )
          .join("");
      }

      function sendFriendRequestFromHeader(userId, userName = "") {
        fetch("/friends/request", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ receiverId: userId }),
        })
          .then((res) => res.json())
          .then((data) => {
            if (data.success) {
              // Show success notification
              const alertDiv = document.createElement("div");
              alertDiv.className =
                "alert alert-success alert-dismissible fade show position-fixed";
              alertDiv.style.cssText =
                "top: 20px; right: 20px; z-index: 9999; min-width: 300px;";
              alertDiv.innerHTML = `
                <i class="fas fa-user-plus"></i> Friend request sent to ${
                  userName || "user"
                }!
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
              `;
              document.body.appendChild(alertDiv);
              setTimeout(() => alertDiv.remove(), 3000);

              // Hide search results
              hideHeaderSearchResults();
              // Clear search input
              document.getElementById("headerSearchInput").value = "";
            } else {
              if (
                data.error ===
                "You already have a pending request from this user"
              ) {
                // Show a more helpful message
                const alertDiv = document.createElement("div");
                alertDiv.className =
                  "alert alert-info alert-dismissible fade show position-fixed";
                alertDiv.style.cssText =
                  "top: 20px; right: 20px; z-index: 9999; min-width: 300px;";
                alertDiv.innerHTML = `
                  <i class="fas fa-info-circle"></i> ${data.error}
                  <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                `;
                document.body.appendChild(alertDiv);
                setTimeout(() => alertDiv.remove(), 5000);
              } else {
                alert(data.error || "Could not send request");
              }
            }
          })
          .catch(() => {
            alert("Could not send request. Please try again.");
          });
      }

      function showHeaderSearchLoading() {
        document.getElementById("headerSearchLoading").style.display = "block";
        document.getElementById("headerSearchResults").style.display = "block";
        document.getElementById("headerUsersList").innerHTML = "";
        document.getElementById("headerNoResults").style.display = "none";
      }

      function hideHeaderSearchLoading() {
        document.getElementById("headerSearchLoading").style.display = "none";
      }

      function hideHeaderSearchResults() {
        document.getElementById("headerSearchResults").style.display = "none";
      }

      // Add event listeners for header search
      document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("headerSearchInput");

        // Real-time search with debouncing
        searchInput.addEventListener("input", function () {
          clearTimeout(headerSearchTimeout);
          const searchTerm = this.value.trim();

          if (searchTerm.length === 0) {
            hideHeaderSearchResults();
            return;
          }

          headerSearchTimeout = setTimeout(() => {
            headerSearchUsers();
          }, 300);
        });

        // Search on Enter key
        searchInput.addEventListener("keypress", function (e) {
          if (e.key === "Enter") {
            headerSearchUsers();
          }
        });

        // Hide search results when clicking outside
        document.addEventListener("click", function (e) {
          const searchContainer = document.querySelector(".search-container");
          const searchResults = document.getElementById("headerSearchResults");

          if (!searchContainer.contains(e.target)) {
            hideHeaderSearchResults();
          }
        });
      });
    </script>

    <script>
      // Update header friend request count badge and dropdown content
      function updateHeaderRequestCount() {
        fetch("/friends/requests")
          .then((response) => response.json())
          .then((data) => {
            const countBadge = document.getElementById("headerRequestCount");
            const requestsList = document.getElementById("headerRequestsList");

            if (countBadge) {
              if (data.requests.length > 0) {
                countBadge.textContent = data.requests.length;
                countBadge.style.display = "inline";
              } else {
                countBadge.style.display = "none";
              }
            }

            if (requestsList) {
              if (data.requests.length === 0) {
                requestsList.innerHTML = `
                <div class="text-center text-muted p-3">
                  <i class="fas fa-inbox fa-2x mb-2"></i>
                  <p class="mb-0 small">No pending requests</p>
                </div>
              `;
              } else {
                requestsList.innerHTML = data.requests
                  .map(
                    (request) => `
                <div class="dropdown-item p-2">
                  <div class="d-flex align-items-center">
                    <div class="user-avatar-small me-2" style="width: 32px; height: 32px; font-size: 0.9rem;">
                      ${(request.sender.firstName || "").charAt(0)}${(
                      request.sender.lastName || ""
                    ).charAt(0)}
                    </div>
                    <div class="flex-grow-1">
                      <div class="fw-bold small">${
                        request.sender.firstName || ""
                      } ${request.sender.lastName || ""}</div>
                      <div class="text-muted small">@${
                        request.sender.username
                      }</div>
                    </div>
                    <div class="btn-group btn-group-sm" role="group">
                      <button class="btn btn-success btn-sm" onclick="acceptRequest('${
                        request.id
                      }')" title="Accept">
                        <i class="fas fa-check"></i>
                      </button>
                      <button class="btn btn-outline-secondary btn-sm" onclick="declineRequest('${
                        request.id
                      }')" title="Decline">
                        <i class="fas fa-times"></i>
                      </button>
                    </div>
                  </div>
                </div>
              `
                  )
                  .join("");
              }
            }
          })
          .catch((error) => {
            console.error("Error updating header request count:", error);
          });
      }

      function acceptRequest(requestId) {
        fetch("/friends/accept", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ requestId }),
        })
          .then((res) => res.json())
          .then((data) => {
            if (data.success) {
              updateHeaderRequestCount();

              // Refresh friends list on dashboard if we're on the dashboard page
              if (typeof refreshFriendsList === "function") {
                refreshFriendsList();
              }

              // Show success message
              const alertDiv = document.createElement("div");
              alertDiv.className =
                "alert alert-success alert-dismissible fade show position-fixed";
              alertDiv.style.cssText =
                "top: 20px; right: 20px; z-index: 9999; min-width: 300px;";
              alertDiv.innerHTML = `
              <i class="fas fa-check"></i> Friend request accepted!
              <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
              document.body.appendChild(alertDiv);
              setTimeout(() => alertDiv.remove(), 3000);
            } else {
              alert(data.error || "Could not accept request");
            }
          })
          .catch(() => {
            alert("Could not accept request. Please try again.");
          });
      }

      function declineRequest(requestId) {
        fetch("/friends/decline", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ requestId }),
        })
          .then((res) => res.json())
          .then((data) => {
            if (data.success) {
              updateHeaderRequestCount();
              // Show success message
              const alertDiv = document.createElement("div");
              alertDiv.className =
                "alert alert-info alert-dismissible fade show position-fixed";
              alertDiv.style.cssText =
                "top: 20px; right: 20px; z-index: 9999; min-width: 300px;";
              alertDiv.innerHTML = `
              <i class="fas fa-times"></i> Friend request declined
              <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
              document.body.appendChild(alertDiv);
              setTimeout(() => alertDiv.remove(), 3000);
            } else {
              alert(data.error || "Could not decline request");
            }
          })
          .catch(() => {
            alert("Could not decline request. Please try again.");
          });
      }

      function showUserSearch() {
        // Focus on the header search input
        const searchInput = document.getElementById("headerSearchInput");
        if (searchInput) {
          searchInput.focus();
          // Trigger search dropdown
          searchInput.dispatchEvent(new Event("input"));
        }
      }

      document.addEventListener("DOMContentLoaded", function () {
        updateHeaderRequestCount();
        // Update every 30 seconds for live updates
        setInterval(updateHeaderRequestCount, 30000);
      });
    </script>
  </body>
</html>
