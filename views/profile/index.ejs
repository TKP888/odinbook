<div class="container-fluid">
  <div class="row">
    <!-- Profile Header -->
    <div class="col-12 mb-4">
      <div class="card">
        <div class="card-body text-center">
          <div class="profile-avatar mb-3">
            <div class="user-avatar-large">
              <%= user.firstName.charAt(0) %><%= user.lastName.charAt(0) %>
            </div>
          </div>
          <h2><%= user.firstName %> <%= user.lastName %></h2>
          <p class="text-muted">@<%= user.username %></p>
          <button class="btn btn-primary">Edit Profile</button>
        </div>
      </div>
    </div>

    <!-- About -->
    <div class="col-md-8 mb-4">
      <div class="card">
        <div class="card-header">
          <h5 class="mb-0">About</h5>
        </div>
        <div class="card-body">
          <!-- Bio Display -->
          <div id="bio-display">
            <% if (user.bio) { %>
              <p class="mb-3"><%= user.bio %></p>
              <button class="btn btn-outline-primary btn-sm" onclick="editBio()">
                <i class="fas fa-edit"></i> Edit Bio
              </button>
            <% } else { %>
              <p class="text-muted mb-3">No bio added yet.</p>
              <button class="btn btn-outline-primary btn-sm" onclick="editBio()">
                <i class="fas fa-plus"></i> Add Bio
              </button>
            <% } %>
          </div>
          
          <!-- Bio Edit Form (hidden by default) -->
          <div id="bio-edit" style="display: none;">
            <div class="mb-3">
              <textarea
                id="bioTextarea"
                class="form-control"
                rows="4"
                placeholder="Tell us about yourself..."
                maxlength="250"
              ><%= user.bio || '' %></textarea>
              <div class="form-text text-end">
                <span id="bioCharCount"><%= (user.bio || '').length %></span>/250
              </div>
            </div>
            <div class="d-flex gap-2">
              <button class="btn btn-primary btn-sm" onclick="saveBio()">
                <i class="fas fa-save"></i> Save
              </button>
              <button class="btn btn-secondary btn-sm" onclick="cancelBioEdit()">
                <i class="fas fa-times"></i> Cancel
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Friends Section -->
    <div class="col-md-4 mb-4">
      <div class="card">
        <div class="card-header">
          <h5 class="mb-0">Your Friends</h5>
        </div>
        <div class="card-body">
          <% if (friends.length === 0) { %>
          <div class="text-center text-muted py-3">
            <!-- <i class="fas fa-user-friends fa-2x mb-2"></i> -->
            <h6>No friends yet</h6>
            <p class="small">
              Start connecting with people to build your network!
            </p>
            <button class="btn btn-primary btn-sm" onclick="switchToAllUsers()">
              <!-- <i class="fas fa-search"></i>  -->
              Find Friends
            </button>
          </div>
          <% } else { %>
          <div class="friends-list">
            <% friends.slice(0, 5).forEach(friend => { %>
            <div class="d-flex align-items-center mb-3 p-2 border-bottom">
              <div
                class="user-avatar-large me-3"
                style="width: 40px; height: 40px; font-size: 1rem"
              >
                <%= (friend.firstName || '').charAt(0) %><%= (friend.lastName ||
                '').charAt(0) %>
              </div>
              <div class="flex-grow-1">
                <h6 class="mb-1 small">
                  <%= friend.firstName || '' %> <%= friend.lastName || '' %> <%
                  if (!friend.firstName && !friend.lastName) { %>
                  <span class="text-muted">(No name)</span>
                  <% } %>
                </h6>
                <p class="text-muted mb-0 small">@<%= friend.username %></p>
              </div>
              <button
                class="btn btn-outline-danger btn-sm remove-friend-btn"
                data-friend-id="<%= friend.id %>"
                data-friend-name="<%= friend.firstName || 'No First Name' %> <%= friend.lastName || 'No Last Name' %>"
                title="Unfriend"
              >
                <i class="fas fa-user-minus"></i>
              </button>
            </div>
            <% }); %> <% if (friends.length > 5) { %>
            <div class="text-center mt-3">
              <button class="btn btn-outline-primary btn-sm">
                View All <%= friends.length %> Friends
              </button>
            </div>
            <% } %>
          </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Custom Like Button Styling */
  .like-btn {
    background-color: transparent;
    border: 1px solid #dee2e6;
    color: #6c757d;
    transition: all 0.2s ease;
  }

  .like-btn:hover {
    background-color: #0d6efd;
    border-color: #0d6efd;
    color: white;
  }

  .like-btn.liked {
    background-color: #dc3545;
    border-color: #dc3545;
    color: white;
  }

  .like-btn.liked:hover {
    background-color: #c82333;
    border-color: #c82333;
    color: white;
  }

  .like-btn i {
    transition: color 0.2s ease;
  }

  .like-btn:hover i {
    color: white;
  }

  .like-btn.liked i {
    color: white;
  }
</style>

<script>
  // Initialize modals
  let createPostModal;
  let editPostModal;
  let likesModal;

  document.addEventListener('DOMContentLoaded', function() {
    createPostModal = new bootstrap.Modal(document.getElementById('createPostModal'));
    editPostModal = new bootstrap.Modal(document.getElementById('editPostModal'));
    likesModal = new bootstrap.Modal(document.getElementById('likesModal'));

    // Character count for create post modal
    const postContent = document.getElementById('postContent');
    if (postContent) {
      postContent.addEventListener('input', function() {
        const charCount = this.value.length;
        document.getElementById('charCount').textContent = charCount;
        document.getElementById('charCount').style.color = charCount > 200 ? '#dc3545' : charCount > 150 ? '#ffc107' : '#6c757d';
      });
    }

    // Character count for edit post modal
    const editPostContent = document.getElementById('editPostContent');
    if (editPostContent) {
      editPostContent.addEventListener('input', function() {
        const charCount = this.value.length;
        document.getElementById('editCharCount').textContent = charCount;
        document.getElementById('editCharCount').style.color = charCount > 200 ? '#dc3545' : charCount > 150 ? '#ffc107' : '#6c757d';
      });
    }

    // Character count for inline post form
    const inlinePostContent = document.getElementById('inlinePostContent');
    if (inlinePostContent) {
      inlinePostContent.addEventListener('input', function() {
        const charCount = this.value.length;
        document.getElementById('inlineCharCount').textContent = charCount;
        document.getElementById('inlineCharCount').style.color = charCount > 200 ? '#dc3545' : charCount > 150 ? '#ffc107' : '#6c757d';
      });
    }

    // Character count for bio textarea
    const bioTextarea = document.getElementById('bioTextarea');
    if (bioTextarea) {
      bioTextarea.addEventListener('input', function() {
        const charCount = this.value.length;
        document.getElementById('bioCharCount').textContent = charCount;
        document.getElementById('bioCharCount').style.color = charCount > 400 ? '#dc3545' : charCount > 300 ? '#ffc107' : '#6c757d';
      });
    }



    // Add edit post handlers
    document.querySelectorAll('.edit-post-btn').forEach(btn => {
      btn.addEventListener('click', function(e) {
        e.preventDefault();
        const postId = this.dataset.postId;
        const content = this.dataset.postContent;
        editPost(postId, content);
      });
    });

    // Add delete post handlers
    document.querySelectorAll('.delete-post-btn').forEach(btn => {
      btn.addEventListener('click', function(e) {
        e.preventDefault();
        const postId = this.dataset.postId;
        deletePost(postId);
      });
    });
  });

  function openCreatePostModal() {
    document.getElementById('postContent').value = '';
    document.getElementById('charCount').textContent = '0';
    document.getElementById('charCount').style.color = '#6c757d';
    createPostModal.show();
  }

  function createPost() {
    const content = document.getElementById('postContent').value.trim();
    
    if (!content) {
      alert('Please enter some content for your post.');
      return;
    }

    if (content.length > 250) {
      alert('Post content cannot exceed 250 characters.');
      return;
    }

    const createPostBtn = document.getElementById('createPostBtn');
    const originalText = createPostBtn.innerHTML;
    createPostBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Posting...';
    createPostBtn.disabled = true;

    fetch('/posts', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ content })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        createPostModal.hide();
        location.reload(); // Refresh the page to show new post
      } else {
        alert(data.error || 'Failed to create post');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Failed to create post. Please try again.');
    })
    .finally(() => {
      createPostBtn.innerHTML = originalText;
      createPostBtn.disabled = false;
    });
  }

  function editPost(postId, content) {
    document.getElementById('editPostId').value = postId;
    document.getElementById('editPostContent').value = content;
    document.getElementById('editCharCount').textContent = content.length;
    editPostModal.show();
  }

  function saveEditedPost() {
    const postId = document.getElementById('editPostId').value;
    const content = document.getElementById('editPostContent').value.trim();
    
    if (!content) {
      alert('Please enter some content for your post.');
      return;
    }

    const saveBtn = document.getElementById('saveEditPostBtn');
    const originalText = saveBtn.innerHTML;
    saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Saving...';
    saveBtn.disabled = true;

    fetch(`/posts/${postId}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ content })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        editPostModal.hide();
        location.reload(); // Refresh the page to show updated post
      } else {
        alert(data.error || 'Failed to update post');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Failed to update post. Please try again.');
    })
    .finally(() => {
      saveBtn.innerHTML = originalText;
      saveBtn.disabled = false;
    });
  }

  function deletePost(postId) {
    if (confirm('Are you sure you want to delete this post?')) {
      fetch(`/posts/${postId}`, {
        method: 'DELETE'
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          location.reload(); // Refresh the page to remove the post
        } else {
          alert(data.error || 'Failed to delete post');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Failed to delete post. Please try again.');
      });
    }
  }

  function toggleLike(postId) {
    fetch(`/posts/${postId}/like`, {
      method: 'POST'
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        location.reload(); // Refresh to update like status
      } else {
        alert(data.error || 'Failed to toggle like');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Failed to toggle like. Please try again.');
    });
  }

  function toggleComments(postId) {
    const commentsSection = document.getElementById(`comments-${postId}`);
    if (commentsSection.style.display === 'none') {
      commentsSection.style.display = 'block';
    } else {
      commentsSection.style.display = 'none';
    }
  }

  function handleCommentKeyPress(event, postId) {
    if (event.key === 'Enter') {
      event.preventDefault();
      submitComment(postId);
    }
  }

  function submitComment(postId) {
    const input = document.getElementById(`comment-input-${postId}`);
    const content = input.value.trim();
    
    if (!content) return;

    fetch(`/posts/${postId}/comment`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ content })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        location.reload(); // Refresh to show new comment
      } else {
        alert(data.error || 'Failed to add comment');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Failed to add comment. Please try again.');
    });
  }

  function deleteComment(commentId) {
    if (confirm('Are you sure you want to delete this comment?')) {
      fetch(`/comments/${commentId}`, {
        method: 'DELETE'
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          location.reload(); // Refresh to remove the comment
        } else {
          alert(data.error || 'Failed to delete comment');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Failed to delete comment. Please try again.');
      });
    }
  }

  function showLikes(postId) {
    fetch(`/posts/${postId}/likes`)
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        const likesList = document.getElementById('likesList');
        likesList.innerHTML = data.likes.map(like => `
          <div class="d-flex align-items-center mb-2">
            <div class="user-avatar-large me-2" style="width: 30px; height: 30px; font-size: 0.8rem;">
              ${(like.user.firstName || '').charAt(0)}${(like.user.lastName || '').charAt(0)}
            </div>
            <div>
              <small class="fw-bold">${like.user.firstName || ''} ${like.user.lastName || ''}</small>
              <br>
              <small class="text-muted">@${like.user.username}</small>
            </div>
          </div>
        `).join('');
        likesModal.show();
      } else {
        alert(data.error || 'Failed to load likes');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Failed to load likes. Please try again.');
    });
  }

  function switchToAllUsers() {
    window.location.href = '/friends/users';
  }

  // Add remove friend functionality
  document.addEventListener('DOMContentLoaded', function() {
    // Add event listeners for remove friend buttons
    document.querySelectorAll('.remove-friend-btn').forEach(btn => {
      btn.addEventListener('click', function(e) {
        e.preventDefault();
        const friendId = this.dataset.friendId;
        const friendName = this.dataset.friendName;
        removeFriend(friendId, friendName);
      });
    });
  });

  function removeFriend(friendId, friendName) {
    if (confirm(`Are you sure you want to remove ${friendName} from your friends?`)) {
      fetch('/friends/remove', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ friendId })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          location.reload(); // Refresh the page to update the friends list
        } else {
          alert(data.error || 'Failed to remove friend');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Failed to remove friend. Please try again.');
      });
    }
  }

  // Bio editing functions
  function editBio() {
    document.getElementById('bio-display').style.display = 'none';
    document.getElementById('bio-edit').style.display = 'block';
    document.getElementById('bioTextarea').focus();
  }

  function cancelBioEdit() {
    document.getElementById('bio-display').style.display = 'block';
    document.getElementById('bio-edit').style.display = 'none';
    // Reset textarea to original value
    document.getElementById('bioTextarea').value = '<%= user.bio || "" %>';
    document.getElementById('bioCharCount').textContent = '<%= (user.bio || "").length %>';
    document.getElementById('bioCharCount').style.color = '#6c757d';
  }

  function saveBio() {
    const bio = document.getElementById('bioTextarea').value.trim();
    
    if (bio.length > 500) {
      alert('Bio cannot exceed 500 characters.');
      return;
    }

    const saveBtn = document.querySelector('#bio-edit .btn-primary');
    const originalText = saveBtn.innerHTML;
    saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Saving...';
    saveBtn.disabled = true;

    fetch('/profile/bio', {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ bio })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Update the display without refreshing the page
        const bioDisplay = document.getElementById('bio-display');
        if (bio) {
          bioDisplay.innerHTML = `
            <p class="mb-3">${bio}</p>
            <button class="btn btn-outline-primary btn-sm" onclick="editBio()">
              <i class="fas fa-edit"></i> Edit Bio
            </button>
          `;
        } else {
          bioDisplay.innerHTML = `
            <p class="text-muted mb-3">No bio added yet.</p>
            <button class="btn btn-outline-primary btn-sm" onclick="editBio()">
              <i class="fas fa-plus"></i> Add Bio
            </button>
          `;
        }
        
        // Hide edit form
        document.getElementById('bio-edit').style.display = 'none';
        document.getElementById('bio-display').style.display = 'block';
      } else {
        alert(data.error || 'Failed to save bio');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Failed to save bio. Please try again.');
    })
    .finally(() => {
      saveBtn.innerHTML = originalText;
      saveBtn.disabled = false;
    });
  }

  function createInlinePost() {
    const content = document.getElementById('inlinePostContent').value.trim();
    
    if (!content) {
      alert('Please enter some content for your post.');
      return;
    }

    if (content.length > 250) {
      alert('Post content cannot exceed 250 characters.');
      return;
    }

    const createPostBtn = document.getElementById('inlineCreatePostBtn');
    const originalText = createPostBtn.innerHTML;
    createPostBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Posting...';
    createPostBtn.disabled = true;

    fetch('/posts', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ content })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        document.getElementById('inlinePostContent').value = '';
        document.getElementById('inlineCharCount').textContent = '0';
        location.reload(); // Refresh the page to show new post
      } else {
        alert(data.error || 'Failed to create post');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Failed to create post. Please try again.');
    })
    .finally(() => {
      createPostBtn.innerHTML = originalText;
      createPostBtn.disabled = false;
    });
  }
</script>

<!-- Create Post Form -->
<div class="col-12 mb-4">
  <div class="card">
    <div class="card-body">
      <div class="d-flex align-items-start">
        <div class="user-avatar-small me-3" style="width: 40px; height: 40px; font-size: 1rem;">
          <%= user.firstName.charAt(0) %><%= user.lastName.charAt(0) %>
        </div>
        <div class="flex-grow-1">
          <form id="inlineCreatePostForm">
            <div class="d-flex align-items-center gap-2">
              <div class="flex-grow-1">
                <textarea
                  id="inlinePostContent"
                  class="form-control"
                  rows="3"
                  placeholder="What's on your mind, <%= user.firstName %>?"
                  maxlength="250"
                ></textarea>
                <div class="form-text text-end">
                  <span id="inlineCharCount">0</span>/250
                </div>
              </div>
              <button
                type="button"
                class="btn btn-primary"
                onclick="createInlinePost()"
                id="inlineCreatePostBtn"
              >
                <i class="fas fa-paper-plane"></i> Post
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Posts Feed -->
        <div class="col-12">
          <div class="card">
            <div class="card-header">
              <h5 class="mb-0">My Posts</h5>
            </div>
            <div class="card-body">
              <% if (posts.length === 0) { %>
              <!-- No Posts -->
              <div class="text-center text-muted py-4">
                <p>No posts yet.</p>
                <button class="btn btn-primary" onclick="openCreatePostModal()">
                  + Create Post
                </button>
              </div>
              <% } else { %>
              <!-- Posts List -->
              <div class="posts-list">
                <% posts.forEach(post => { %>
                <div class="post-item mb-4 p-3 border rounded" data-post-id="<%= post.id %>">
                    <!-- Post Header -->
                    <div class="d-flex align-items-start mb-3">
                      <div class="user-avatar-small me-3" style="width: 40px; height: 40px; font-size: 1rem;">
                        <%= (post.user.firstName || '').charAt(0) %><%= (post.user.lastName || '').charAt(0) %>
                      </div>
                      <div class="flex-grow-1">
                        <div class="d-flex justify-content-between align-items-start">
                          <div>
                            <h6 class="mb-1">
                              <%= post.user.firstName || '' %> <%= post.user.lastName || '' %>
                              <span class="text-muted small">@<%= post.user.username %></span>
                            </h6>
                            <small class="text-muted">
                              <%= new Date(post.createdAt).toLocaleDateString() %> at <%= new Date(post.createdAt).toLocaleTimeString() %>
                            </small>
                          </div>
                          <div class="dropdown">
                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                              <i class="fas fa-ellipsis-h"></i>
                            </button>
                            <ul class="dropdown-menu">
                              <li><a class="dropdown-item edit-post-btn" href="#" data-post-id="<%= post.id %>" data-post-content="<%= post.content.replace(/'/g, "\\'") %>">
                                <i class="fas fa-edit"></i> Edit
                              </a></li>
                              <li><a class="dropdown-item text-danger delete-post-btn" href="#" data-post-id="<%= post.id %>">
                                <i class="fas fa-trash"></i> Delete
                              </a></li>
                            </ul>
                          </div>
                        </div>
                      </div>
                    </div>

                    <!-- Post Content -->
                    <div class="post-content"><%= post.content.replace(/\n/g, "<br>") %></div>

                    <!-- Post Actions -->
                    <div class="d-flex justify-content-between align-items-center mt-3 pt-3 border-top">
                      <!-- Action Buttons -->
                      <div class="d-flex gap-2">
                        <!-- Like Button -->
                        <button class="btn btn-sm like-btn <%= post.likes.some(like => like.userId === user.id) ? 'liked' : '' %>" 
                                onclick="toggleLike('<%= post.id %>')" 
                                data-post-id="<%= post.id %>">
                          <i class="fas fa-heart"></i> 
                          Like
                        </button>
                        
                        <!-- Comment Button -->
                        <button class="btn btn-sm btn-outline-secondary" onclick="toggleComments('<%= post.id %>')">
                          <i class="fas fa-comment"></i> 
                          Comment
                        </button>
                      </div>
                      
                      <!-- Counters -->
                      <div class="text-muted small">
                        <span class="likes-count" onclick="showLikes('<%= post.id %>')" style="cursor: pointer;">
                          <%= post.likes.length %> like<%= post.likes.length !== 1 ? 's' : '' %>
                        </span>
                        <span class="comments-count ms-2" onclick="toggleComments('<%= post.id %>')" style="cursor: pointer;">
                          <%= post.comments.length %> comment<%= post.comments.length !== 1 ? 's' : '' %>
                        </span>
                      </div>
                    </div>

                    <!-- Comments Section -->
                    <div class="comments-section mt-3" id="comments-<%= post.id %>" style="display: none;">
                      <div class="comments-list mb-3" id="comments-list-<%= post.id %>">
                        <% if (post.comments && post.comments.length > 0) { %>
                          <% post.comments.forEach(comment => { %>
                          <div class="comment-item p-2 border-bottom">
                            <div class="d-flex align-items-start">
                              <div class="user-avatar-small me-2" style="width: 24px; height: 24px; font-size: 0.7rem;">
                                <%= (comment.user.firstName || '').charAt(0) %><%= (comment.user.lastName || '').charAt(0) %>
                              </div>
                              <div class="flex-grow-1">
                                <div class="d-flex justify-content-between align-items-start">
                                  <div>
                                    <small class="fw-bold"><%= comment.user.firstName || '' %> <%= comment.user.lastName || '' %></small>
                                    <div class="comment-content"><%= comment.content %></div>
                                    <small class="text-muted"><%= new Date(comment.createdAt).toLocaleDateString() %></small>
                                  </div>
                                  <% if (comment.userId === user.id) { %>
                                  <button class="btn btn-sm btn-outline-danger" onclick="deleteComment('<%= comment.id %>')" title="Delete comment">
                                    <i class="fas fa-trash"></i>
                                  </button>
                                  <% } %>
                                </div>
                              </div>
                            </div>
                          </div>
                          <% }); %>
                        <% } else { %>
                          <p class="text-muted text-center">No comments yet</p>
                        <% } %>
                      </div>
                      <div class="comment-form">
                        <div class="input-group">
                          <input type="text" class="form-control form-control-sm" placeholder="Write a comment..." id="comment-input-<%= post.id %>" onkeypress="handleCommentKeyPress(event, '<%= post.id %>')">
                          <button class="btn btn-primary btn-sm" onclick="submitComment('<%= post.id %>')">
                            <i class="fas fa-paper-plane"></i>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <% }); %>
              </div>
              <% } %>
            </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Create Post Modal -->
      <div
        class="modal fade"
        id="createPostModal"
        tabindex="-1"
        aria-labelledby="createPostModalLabel"
        aria-hidden="true"
      >
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="createPostModalLabel">
                Create New Post
              </h5>
              <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
              ></button>
            </div>
            <div class="modal-body">
              <form id="createPostForm">
                <div class="mb-3">
                  <!-- <label for="postContent" class="form-label"
              >What's on your mind?</label
            > -->
                  <textarea
                    id="postContent"
                    class="form-control"
                    rows="6"
                    placeholder="What's on your mind, <%= user.firstName.charAt(0) %>?"
                    maxlength="250"
                  ></textarea>
                  <div class="form-text"><span id="charCount">0</span>/250</div>
                </div>
              </form>
            </div>
            <div class="modal-footer">
              <button
                type="button"
                class="btn btn-secondary"
                data-bs-dismiss="modal"
              >
                Cancel
              </button>
              <button
                type="button"
                class="btn btn-primary"
                onclick="createPost()"
                id="createPostBtn"
              >
                Post
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Edit Post Modal -->
      <div
        class="modal fade"
        id="editPostModal"
        tabindex="-1"
        aria-labelledby="editPostModalLabel"
        aria-hidden="true"
      >
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="editPostModalLabel">Edit Post</h5>
              <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
              ></button>
            </div>
            <div class="modal-body">
              <form id="editPostForm">
                <input type="hidden" id="editPostId" />
                <div class="mb-3">
                  <textarea
                    id="editPostContent"
                    class="form-control"
                    rows="6"
                    placeholder="What's on your mind?"
                    maxlength="1000"
                  ></textarea>
                  <div class="form-text">
                    <span id="editCharCount">0</span>/250
                  </div>
                </div>
              </form>
            </div>
            <div class="modal-footer">
              <button
                type="button"
                class="btn btn-secondary"
                data-bs-dismiss="modal"
              >
                Cancel
              </button>
              <button
                type="button"
                class="btn btn-primary"
                onclick="saveEditedPost()"
                id="saveEditPostBtn"
              >
                Save
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Likes Modal -->
      <div
        class="modal fade"
        id="likesModal"
        tabindex="-1"
        aria-labelledby="likesModalLabel"
        aria-hidden="true"
      >
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="likesModalLabel">
                People who liked this post
              </h5>
              <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
              ></button>
            </div>
            <div class="modal-body">
              <div id="likesList">
                <!-- Likes will be populated here -->
              </div>
            </div>
          </div>
        </div>
      </div>